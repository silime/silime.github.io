<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>RaspBerry pi 驱动温湿度传感器aht11 </title>
    <link href="/2020/10/03/RaspBerry-pi-%E9%A9%B1%E5%8A%A8%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8aht11/"/>
    <url>/2020/10/03/RaspBerry-pi-%E9%A9%B1%E5%8A%A8%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8aht11/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>RaspBerry pi 驱动oled12864 </title>
    <link href="/2020/10/03/RaspBerry-pi-%E9%A9%B1%E5%8A%A8oled12864/"/>
    <url>/2020/10/03/RaspBerry-pi-%E9%A9%B1%E5%8A%A8oled12864/</url>
    
    <content type="html"><![CDATA[<h3 id="一、材料准备"><a href="#一、材料准备" class="headerlink" title="一、材料准备"></a>一、材料准备</h3><hr><h2 id="树莓派4b，安装rasbian系统的内存卡，支持IIC协议的OLED屏幕，杜邦线"><a href="#树莓派4b，安装rasbian系统的内存卡，支持IIC协议的OLED屏幕，杜邦线" class="headerlink" title="树莓派4b，安装rasbian系统的内存卡，支持IIC协议的OLED屏幕，杜邦线"></a>树莓派4b，安装rasbian系统的内存卡，支持IIC协议的OLED屏幕，杜邦线</h2><h3 id="二、接线"><a href="#二、接线" class="headerlink" title="二、接线"></a>二、接线</h3><p> 树莓派                  oled<br> 3.3v        –&gt;        VCC (VDD)<br> GPIO2(SDL)  –&gt;        SDL(SDA)<br> GPIO3(SCL)  –&gt;        SCL(SCK)<br> GND         –&gt;         GND</p><hr> <img src="/2020/10/03/RaspBerry-pi-%E9%A9%B1%E5%8A%A8oled12864/1.jpg" class title="slug 图片"><h3 id="三、关于I2C-IIC-协议"><a href="#三、关于I2C-IIC-协议" class="headerlink" title="三、关于I2C(IIC)协议"></a>三、关于I2C(IIC)协议</h3><p><a href="https://bbs.elecfans.com/jishu_1120014_1_1.html">IIC协议与OLED的使用</a></p><h3 id="四、驱动OLED"><a href="#四、驱动OLED" class="headerlink" title="四、驱动OLED"></a>四、驱动OLED</h3><ol><li>安装Adafruit库<pre><code class="hljs bash">sudo pip3 install adafruit-circuitpython-ssd1306</code></pre></li><li>使用examples<pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/adafruit/Adafruit_CircuitPython_SSD1306</code></pre></li><li>显示各种信息<br>例一、<pre><code class="hljs python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> subprocess<span class="hljs-keyword">import</span> datetime<span class="hljs-keyword">from</span> board <span class="hljs-keyword">import</span> SCL, SDA<span class="hljs-keyword">import</span> busio<span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image, ImageDraw, ImageFont<span class="hljs-keyword">import</span> adafruit_ssd1306i2c = busio.I2C(SCL, SDA)disp = adafruit_ssd1306.SSD1306_I2C(<span class="hljs-number">128</span>, <span class="hljs-number">64</span>, i2c)disp.fill(<span class="hljs-number">0</span>)disp.show()width = disp.widthheight = disp.heightimage = Image.new(<span class="hljs-string">&quot;1&quot;</span>, (width, height))draw = ImageDraw.Draw(image)draw.rectangle((<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height), outline=<span class="hljs-number">0</span>, fill=<span class="hljs-number">0</span>)padding = <span class="hljs-number">-2</span>top = paddingbottom = height - paddingfont1 = ImageFont.load_default()font = ImageFont.truetype(<span class="hljs-string">&quot;/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf&quot;</span>, <span class="hljs-number">9</span>)font2 = ImageFont.truetype(<span class="hljs-string">&quot;/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf&quot;</span>, <span class="hljs-number">14</span>)font3 = ImageFont.truetype(<span class="hljs-string">&quot;/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc&quot;</span>, <span class="hljs-number">22</span>)<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    draw.rectangle((<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height), outline=<span class="hljs-number">0</span>, fill=<span class="hljs-number">0</span>)    cmd = <span class="hljs-string">&quot;hostname -I | cut -d&#x27; &#x27; -f1&quot;</span>    IP = subprocess.check_output(cmd, shell=<span class="hljs-literal">True</span>).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)    cmd = <span class="hljs-string">&quot;top -bn1 | grep load | awk &#x27;&#123;printf \&quot;CPU Load: %.2f\&quot;, $(NF-2)&#125;&#x27;&quot;</span>    CPU = subprocess.check_output(cmd, shell=<span class="hljs-literal">True</span>).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)    cmd = <span class="hljs-string">&quot;free -m | awk &#x27;NR==2&#123;printf \&quot;Mem: %s/%s MB %.2f%%\&quot;, $3,$2,$3*100/$2 &#125;&#x27;&quot;</span>    MemUsage = subprocess.check_output(cmd, shell=<span class="hljs-literal">True</span>).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)    cmd = <span class="hljs-string">&#x27;df -h | awk \&#x27;$NF==&quot;/&quot;&#123;printf &quot;Disk: %d/%d GB  %s&quot;, $3,$2,$5&#125;\&#x27;&#x27;</span>    Disk = subprocess.check_output(cmd, shell=<span class="hljs-literal">True</span>).decode(<span class="hljs-string">&quot;utf-8&quot;</span>)    draw.text((x, top + <span class="hljs-number">0</span>), <span class="hljs-string">&quot;IP: &quot;</span> + IP, font=font, fill=<span class="hljs-number">255</span>)    draw.text((x, top + <span class="hljs-number">8</span>), CPU, font=font, fill=<span class="hljs-number">255</span>)    draw.text((x, top + <span class="hljs-number">16</span>), MemUsage, font=font, fill=<span class="hljs-number">255</span>)    draw.text((x, top + <span class="hljs-number">25</span>), Disk, font=font, fill=<span class="hljs-number">255</span>)<span class="hljs-comment">#    intro = &quot;Hello!&quot;</span><span class="hljs-comment">#    draw.text((0, 34), intro, font=font2, fill=255)</span><span class="hljs-comment">#    draw.text((0, 34), u&#x27;黄家星是沙雕&#x27;, font=font3, fill=255)</span>    now = datetime.datetime.now()    today_date = now.strftime(<span class="hljs-string">&quot;%d %b %y&quot;</span>)    today_time = now.strftime(<span class="hljs-string">&quot;%H:%M:%S&quot;</span>)    draw.text((x, top + <span class="hljs-number">35</span>), today_date, font=font, fill=<span class="hljs-number">255</span>)    draw.text((x, top + <span class="hljs-number">45</span>), today_time, font=font, fill=<span class="hljs-number">255</span>)    disp.image(image)    disp.show()    time.sleep(<span class="hljs-number">0.1</span>)</code></pre>例二、播放badapple<pre><code class="hljs python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> subprocess<span class="hljs-keyword">import</span> datetime<span class="hljs-keyword">from</span> board <span class="hljs-keyword">import</span> SCL, SDA<span class="hljs-keyword">import</span> busio<span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image, ImageDraw, ImageFont<span class="hljs-keyword">import</span> adafruit_ssd1306i2c = busio.I2C(SCL, SDA)disp = adafruit_ssd1306.SSD1306_I2C(<span class="hljs-number">128</span>, <span class="hljs-number">64</span>, i2c)disp.fill(<span class="hljs-number">0</span>)disp.show()width = disp.widthheight = disp.heightimage = Image.new(<span class="hljs-string">&quot;1&quot;</span>, (width, height))draw = ImageDraw.Draw(image)draw.rectangle((<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height), outline=<span class="hljs-number">0</span>, fill=<span class="hljs-number">0</span>)<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">2</span>,<span class="hljs-number">6551</span>):        disp.show()        image = Image.open(<span class="hljs-string">&quot;bad (&quot;</span>+str(i)+<span class="hljs-string">&quot;).png&quot;</span>).convert(<span class="hljs-string">&#x27;1&#x27;</span>)        disp.image(image)</code></pre><a href="badapple.tar.xz">资料</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>树莓派 12864 oled i2c</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>axure学习笔记</title>
    <link href="/2020/09/29/axure-notes/"/>
    <url>/2020/09/29/axure-notes/</url>
    
    <content type="html"><![CDATA[<h3 id="axure学习笔记"><a href="#axure学习笔记" class="headerlink" title="axure学习笔记"></a>axure学习笔记</h3><hr><h4 id="一、常用快捷键"><a href="#一、常用快捷键" class="headerlink" title="一、常用快捷键"></a>一、常用快捷键</h4><pre><code class="hljs properties"><span class="hljs-attr">F5</span> <span class="hljs-string">生成预览</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ Y  重做</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ O  打开</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ N  新建</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ P  打印</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ F  查找/替换</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ G  群组</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ SHIFT + G 取消群组</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ K 锁定</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ SHIFT + K 解锁</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ &#x27; 显示网格</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ SHITF + &#x27; 对齐网格</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ SHIFT + . 锁定辅助线</span><span class="hljs-attr">CTRL</span> <span class="hljs-string">+ SHIFT + , 对齐辅助线</span><span class="hljs-meta">快捷复制</span> <span class="hljs-string">CTRL + 拖拽 （CTRL + D ）</span><span class="hljs-attr">页面滚动</span><span class="hljs-attr">垂直滚动：鼠标滚动</span><span class="hljs-meta">横向滚动：</span> <span class="hljs-string">SHIFT + 鼠标滚轮</span><span class="hljs-meta">放大缩小：CTRL</span> <span class="hljs-string">+ 滚轮</span><span class="hljs-attr">移动页面：按住空格键，然后鼠标拖动</span><span class="hljs-attr">图层顺序/分布</span><span class="hljs-meta">上移：</span> <span class="hljs-string">CTRL + ]</span><span class="hljs-meta">下移：</span> <span class="hljs-string">CTRL + [</span><span class="hljs-meta">置于顶层：</span> <span class="hljs-string">CTRL + SHIFT + ]</span><span class="hljs-meta">置于顶层：</span> <span class="hljs-string">CTRL + SHIFT + [</span><span class="hljs-meta">左对齐：</span> <span class="hljs-string">CTRL + ALT + L</span><span class="hljs-meta">右对齐：</span> <span class="hljs-string">CTRL + ALT + R</span><span class="hljs-meta">水平居中对齐：CTRL</span> <span class="hljs-string">+ ALT + C</span><span class="hljs-meta">垂直居中对齐：CTRL</span> <span class="hljs-string">+ ALT + M</span><span class="hljs-meta">顶端对齐：CTRL</span> <span class="hljs-string">+ ALT + T</span><span class="hljs-meta">底端对齐：CTRL</span> <span class="hljs-string">+ ALT + B</span><span class="hljs-meta">水平分布：CTRL</span> <span class="hljs-string">+ SHIFT + H</span><span class="hljs-meta">垂直分布：CTRL</span> <span class="hljs-string">+ SHIFT + U</span></code></pre><h4 id="二、页面操作"><a href="#二、页面操作" class="headerlink" title="二、页面操作"></a>二、页面操作</h4><ol><li>等比例调整：按住shift拖动 或点击高度旁小锁</li></ol><hr><img src="/2020/09/29/axure-notes/1.png" class title="slug"><hr><ol start="2"><li>批量调整元素</li></ol><hr>   <img src="/2020/09/29/axure-notes/2.png" class title="slug"><hr><ol start="3"><li>多个图片覆盖调整覆盖顺序</li></ol><hr><img src="/2020/09/29/axure-notes/3.jpg" class title="slug 图片"><img src="/2020/09/29/axure-notes/2.jpg" class title="slug 图片"><hr><ol start="4"><li>组件整体处理</li></ol><hr><img src="/2020/09/29/axure-notes/7.jpg" class title="slug 图片"><hr><ol start="5"><li>占位符意思</li></ol><hr><img src="/2020/09/29/axure-notes/3.png" class title="slug 图片"><hr><ol start="6"><li>矩形圆角，拖动黄色三角形即可</li></ol><hr><img src="/2020/09/29/axure-notes/4.png" class title="slug 图片"><hr><ol start="7"><li>导入图片，双击中间直接导入会根据，图片调整大小，双击边框正方形固定导入图片</li></ol><hr><img src="/2020/09/29/axure-notes/5.png" class title="slug 图片"><img src="/2020/09/29/axure-notes/6.png" class title="slug 图片"><hr><ol start="8"><li>输入框，右边交互输入提示文本和文本长度</li></ol><hr><img src="/2020/09/29/axure-notes/7.png" class title="slug 图片"><img src="/2020/09/29/axure-notes/9.png" class title="slug 图片"><hr><ol start="9"><li>下拉文本选择框，双击即可添加选项</li></ol><hr><img src="/2020/09/29/axure-notes/11.png" class title="slug 图片"><img src="/2020/09/29/axure-notes/10.png" class title="slug 图片"><hr>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My fist post</title>
    <link href="/2020/09/18/My-fist-post/"/>
    <url>/2020/09/18/My-fist-post/</url>
    
    <content type="html"><![CDATA[<h3 id="哈哈哈"><a href="#哈哈哈" class="headerlink" title="哈哈哈"></a>哈哈哈</h3><img src="/2020/09/18/My-fist-post/1.jpg" class title="slug 啦啊啊">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/09/17/hello-world/"/>
    <url>/2020/09/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
